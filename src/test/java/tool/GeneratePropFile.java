package tool;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by Eldath on 2017/1/30 0030.
 *
 * @author Eldath
 */
public class GeneratePropFile {
    private static Map<String, String> schedule = new HashMap<>();
    private static final String nowYear = String.valueOf(LocalDate.now().getYear());

    static {
        schedule.put("04-28T14:19:17", "Hello, World.");
        schedule.put("12-28T06:06:06", "OPCODE 与 OPCODE，在冬天的约定 - 1903年的今天，计算机之父『冯•诺依曼』降生。\n" +
                "\"（A）冯·诺依曼可以证明任何事情；\"\"（B）冯·诺依曼所证明的任何事情都是正确的。\"");
        // schedule.put("01-29T19:03:54", nowTimeNotice + "2016年的今天，是我Avalon的生日。" +
        //         "\n\" 感谢我的父亲Mojo-Webqq和我的开发者Eldath Ray。 \"");
        //TODO C之父的话：等式非常简单：里奇就像爱因斯坦，纯粹的天才。IT业的所有都基于肯贝汉和里奇的成果。
        //TODO 哥特尔的话：有些事实被认知为真，但不必然可证。
    }

    public static void main(String[] args) throws Exception {
        // Write part
        Path path = Paths.get(System.getProperty("user.dir") + "/ShowMsg.properties");
        System.out.println("At: " + path.toString());
        Files.deleteIfExists(path);
        Files.createFile(path);
        try (BufferedWriter bw = Files.newBufferedWriter(path, StandardCharsets.UTF_8)) {
            bw.write("#This config file is generated by Avalon to config ShowMsg plugin.\n");
            for (Map.Entry stringEntryOnce : schedule.entrySet()) {
                String key = (String) stringEntryOnce.getKey();
                String value = (((String) stringEntryOnce.getValue())).replace("\n", "\\n");
                bw.write(key + "=" + value);
                bw.newLine();
            }
        }
        // Read part
        String thisLine;
        String[] split;
        HashMap<String, String> read = new HashMap<>();
        read.clear();
        try (BufferedReader br = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {
            while ((thisLine = br.readLine()) != null) {
                if (!thisLine.contains("=") || thisLine.charAt(0) == '#') continue;
                split = thisLine.split("=");
                read.put(split[0], split[1]);
            }
        }
        for (Map.Entry stringEntry : read.entrySet()) {
            String key = nowYear + "-" + stringEntry.getKey();
            String value = ((String) stringEntry.getValue()).replace("\\n", "\n");
            Response.responseGroup("617118724",
                    "现在是" + LocalDateTime.parse(key).toString().replace("T", " ") + "\n" + value);
        }
    }
}
